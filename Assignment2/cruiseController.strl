% pedal detection (Krithik)
module PedalDetection:
	input accel : double, brake : double;
	output accelPressed : boolean, brakePressed : boolean;

	var pedalsMin := 0.03 : double in
		loop
			pause;
				% Emit if pedal pressed enough
				if (?accel >= 0.03) then
					emit accelPressed(true)
				elsif (?brake >= 0.03) then
					emit brakePressed(true)
				end if;

				% Reset accelPressed/brakePressed when input low
				if (?accel < 0.03) then
					emit accelPressed(false)
				end if;

				if (?brake < 0.03) then
					emit brakePressed(false)
				end if;
		end loop
	end var
end module

% Cruise Speed Management (Krithik)




% Cruise state management module, handles state transitions (Krishen)
module StateController:
	input on: boolean, off : boolean, resume : boolean;
	input accelPressed : boolean, brakePressed : boolean;
	input speed := 50.0 : double;

	% Cruise State:
	% 	0 = OFF
	% 	1 = ON
	% 	2 = STDBY
	% 	3 = DISABLE
	output cruiseState : integer;

	% Brake Pressed and AccelPressed cannot be high at the same time
	relation brakePressed # accelPressed;

	var speedInRange : boolean in
	loop	
		pause;
		var speedMin := 30.0 : double, speedMax := 150.0 : double in

		%  Output ON when on button pressed, accelerator not pressed, and speed in range
		if (?on and (?accelPressed = false) and ?speed >= speedMin and ?speed <= speedMax) then
			emit cruiseState(1) 
		end if;
		end var
	end loop
	end var
end module

% Car Driving Control (Krishen)



% Toplevel module running
module cruiseController:

	% Visible inputs/outputs StateController
	input on1: boolean, off1 : boolean, resume1 : boolean, set1 : boolean;
	input quickAccel : boolean, quickDecel : boolean;
	input accel1 : double, brake1 : double, speed1 : double;
	input accelPressed1 : boolean, brakePressed1 : boolean;
	
	output cruiseSpeed : double;
	output throttleCmd : double;
	output cruiseState1 := 0 : integer;

	run PedalDetection 
	[
		signal brake1/brake;
		signal accel1/accel;
		signal accelPressed1/accelPressed;
		signal brakePressed1/brakePressed
	]
	
	||

	run StateController 
	[
		signal cruiseState1/cruiseState;
		signal on1/on;
		signal off1/off;
		signal resume1/resume;
		signal brakePressed1/brakePressed;
		signal accelPressed1/accelPressed;
		signal speed1/speed
	]

end module

